on:
  push:
    tags:
      - v1.*

jobs:
  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.13.x]
        node-version: [10.x]
        platform: [windows-latest]
        python-version: [3.7]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install DotNet
        uses: actions/setup-dotnet@bb95ce727fd49ec1a65933419cc7c91747785302
        with:
          dotnet-version: '3.1.100'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@releases/v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python Deps
        run: |
          pip3 install pyenv-win
          pip3 install pipenv
      - name: Set Build Env Vars
        uses: allenevans/set-env@v1.0.0
        with:
          PULUMI_TEST_OWNER: "moolumi"
          PULUMI_LOCAL_NUGET: "C:\Pulumi\nuget"
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get dependencies
        run: |
          set GOMODULE111=on
          go mod tidy
          go mod vendor
      - name: Run Pulumi Release Process
        run: |
          dotnet msbuild /t:ReleaseProcess /v:Detailed build.proj
